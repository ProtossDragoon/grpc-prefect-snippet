PROJECT = gps
include envs/network.env

all: install lint test format

install:
	python3 -m pip install --upgrade pip
	# NOTE: betterproto 1.x is not full-featured, but currently 2.x is not released.
	python3 -m pip uninstall -y betterproto
	python3 -m pip install "betterproto[compiler]" --pre
	python3 -m pip install "pydantic<2" "prefect>=2.15" "prefect-docker"
	python3 -m pip install -r requirements.txt

uninstall:
	python3 -m pip install --upgrade pip
	python3 -m pip uninstall -r requirements.txt

lint:
	python3 -m pylint --rcfile=pylintrc ./${PROJECT}

test:
	python3 -m unittest discover -s ./${PROJECT} -p "*_test.py" -v
	python3 -m unittest discover -s ./${PROJECT} -p "test_*.py" -v

format:
	# NOTE: Source code auto generated by grpc tool (in this Makefile: 'proto') has "*_pb2*" pattern.
	python3 -m yapf -ir . --exclude "*_pb2*"

proto:
	python3 -m grpc_tools.protoc \
		--python_out=. \
		--grpc_python_out=. \
		--python_betterproto_out=${PROJECT}/proto \
		--proto_path=. \
		${PROJECT}/proto/${PROJECT}.proto
	# NOTE: python_out, grpc_python_out: RAW official grpc output. Use betterproto instead.
	# NOTE: betterproto also has --python_betterproto_opt=pydantic_dataclasses option but currently not stable.

clean:
	rm ./${PROJECT}/proto/*.py
	rm -r ./${PROJECT}/proto/${PROJECT}

prefect-server:
	prefect config set PREFECT_API_URL=${PREFECT_API_URL}
	prefect config view
	prefect server start --host ${PREFECT_HOST} --port ${PREFECT_SERVER_PORT}

prefect-server-clean:
	prefect server database reset -y
